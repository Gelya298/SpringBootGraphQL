buildscript {
    ext {
        kotlinVersion = '1.2.31'
        springBootVersion = '2.1.0.RELEASE'
    }
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
        classpath("org.jetbrains.kotlin:kotlin-gradle-plugin:${kotlinVersion}")
        classpath("org.jetbrains.kotlin:kotlin-allopen:${kotlinVersion}")
    }
}

plugins {
    id 'org.liquibase.gradle' version '1.2.4'
    id 'org.sonarqube' version '2.6.1'
}

sonarqube {
    properties {
        property 'springbootgraphql', 'Example of SonarQube Scanner'
    }
}


apply plugin: 'java'
apply plugin: 'kotlin'
apply plugin: 'kotlin-spring'
apply plugin: 'eclipse'
apply plugin: 'jacoco'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'

group = 'com.ochiengolanga.tuts'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = 1.8

repositories {
    mavenCentral()
    maven { url "https://repo.spring.io/milestone" }
    maven { url "http://repo.spring.io/libs-milestone" }
    maven { url "http://jcenter.bintray.com" }
    jcenter()
}

repositories {
    maven { url 'https://maven.icosillion.com/artifactory/open-source/' }
}

ext {
    springCloudVersion = 'Greenwich.M1'
}


dependencies {
    implementation('com.icosillion.podengine:podengine:2.3')

    implementation('org.springframework.boot:spring-boot-starter-data-jpa')
    implementation('org.springframework.cloud:spring-cloud-starter-netflix-hystrix')
    implementation('org.springframework.cloud:spring-cloud-starter-openfeign')

    compile group: 'com.graphql-java', name: 'graphql-spring-boot-starter', version: '5.0.2'
    compile group: 'com.graphql-java', name: 'graphiql-spring-boot-starter', version: '5.0.2'
    compile group: 'com.graphql-java', name: 'graphql-java-tools', version: '5.2.4'

    runtimeOnly('com.h2database:h2')
    compileOnly('org.springframework.boot:spring-boot-configuration-processor')
    compileOnly('org.projectlombok:lombok')
    testImplementation('org.springframework.boot:spring-boot-starter-test')
}

dependencyManagement {
    imports {
        mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
    }
}

sourceSets {
    main.java.srcDirs += "src/main/java"
    test.java.srcDirs += "src/test/java"
}


task jacocoTestReport1(type: JacocoReport, dependsOn: ['test', 'jacocoTestReport']) {

    reports {
        xml.enabled = true
        html.enabled = true
    }

//    def mainSrc = "$project.projectDir/src/main/kotlin"
    def mainSrc = "src/main/java"

    sourceDirectories = files([mainSrc])
}
